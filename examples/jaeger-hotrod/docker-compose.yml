version: "3.7"
services:
  # changing to data-prepper 2.x from here https://github.com/opensearch-project/data-prepper/blob/main/examples/jaeger-hotrod/docker-compose.yml
  data-prepper:
    restart: unless-stopped
    container_name: data-prepper
    image: opensearchproject/data-prepper:2
    volumes:
      - ../trace_analytics_no_ssl.yml:/usr/share/data-prepper/pipelines/pipelines.yaml
      - ../data-prepper-config.yaml:/usr/share/data-prepper/config/data-prepper-config.yaml
      - ../demo/root-ca.pem:/usr/share/data-prepper/root-ca.pem
    ports:
      - "21890:21890"
    networks:
      - my_network
    depends_on:
      - opendistro-for-elasticsearch
  otel-collector:
    container_name: otel-collector-contrib
    image: otel/opentelemetry-collector-contrib:0.60.0
    # command: [ "--config=/etc/otel-collector-config.yml" ]
    working_dir: "/project"
    volumes:
      - ${PWD}/:/project
      - ./otel-collector-config-elastic-export.yml:/etc/otelcol-contrib/config.yml
      - ../demo/demo-data-prepper.crt:/etc/demo-data-prepper.crt
    ports:
      - "14250:14250"
    depends_on:
      - data-prepper
    networks:
      - my_network
  jaeger-agent:
    container_name: jaeger-agent
    image: jaegertracing/jaeger-agent:1.21.0
    command: [ "--reporter.grpc.host-port=otel-collector:14250" ]
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778/tcp"
    networks:
      - my_network
  jaeger-hot-rod:
    image: jaegertracing/example-hotrod:1.22.0
    command: [ "all" ]
    environment:
      - JAEGER_AGENT_HOST=jaeger-agent
      - JAEGER_AGENT_PORT=6831
    ports:
      - "8080-8083:8080-8083"
    depends_on:
      - jaeger-agent
    networks:
      - my_network
  opendistro-for-elasticsearch:
    container_name: node-0.example.com
    image: amazon/opendistro-for-elasticsearch:1.12.0
    ports:
      - '9200:9200'
      - '9600:9600'
    environment:
      - discovery.type=single-node
    networks:
      - my_network
  kibana:
    build:
      context: ../..
      dockerfile: examples/kibana-trace-analytics/Dockerfile
    container_name: odfe-kibana
    ports:
      - 5601:5601
    expose:
      - "5601"
    environment:
      ELASTICSEARCH_URL: https://node-0.example.com:9200
      ELASTICSEARCH_HOSTS: https://node-0.example.com:9200
    networks:
      - my_network
networks:
  my_network: